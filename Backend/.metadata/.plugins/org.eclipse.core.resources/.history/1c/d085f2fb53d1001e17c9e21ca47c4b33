package com.example.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.example.dto.PropertyDto;
import com.example.entity.Property;
import com.example.repository.PropertyRepository;
import com.example.service.PropertyService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/property")
public class PropertyController {

	@Autowired
	PropertyService propertyService;

	@GetMapping("/")
	public List<PropertyDto> getAllProperty() {
		return propertyService.getAlLProperty();
	}

	@GetMapping("/property/{id}")
	public Property getProperty(@PathVariable int id) {
		Property property = propRepo.findById(id).get();
		return property;
	}

	@PostMapping("/RegisterProperty")
	@ResponseStatus(code = HttpStatus.CREATED)
	public void addProperty(@RequestBody Property property) {
		propRepo.save(property);
	}

	@DeleteMapping("/property/delete/{id}")
	public void removeProperty(@PathVariable int id) {
		Property property = propRepo.findById(id).get();
		propRepo.delete(property);
	}
}
